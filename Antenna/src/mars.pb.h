/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9 */

#ifndef PB_MARS_PB_H_INCLUDED
#define PB_MARS_PB_H_INCLUDED
#include "utils/pb.h"
#include "gps.pb.h"
#include "version.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _AntennaControlMode {
    AntennaControlMode_ANTENNA_CONTROL_MODE_UNDEFINED = 0,
    AntennaControlMode_TRACK_ROVER = 1,
    AntennaControlMode_MANUAL_SPEED = 2,
    AntennaControlMode_STOP_ANTENNA = 3
} AntennaControlMode;

/* Struct definitions */
typedef struct _AntennaMotorCommand {
    int32_t moveSteps;
    float moveRadians;
    float targetAngle;
    bool zeroPosition;
} AntennaMotorCommand;

/* / Command to control the movement of the MARS antenna */
typedef struct _AntennaCommand {
    bool has_version;
    Version version;
    AntennaControlMode mode;
    bool has_baseStationCoordinates;
    GpsCoordinates baseStationCoordinates;
    bool has_roverCoordinatesOverride;
    GpsCoordinates roverCoordinatesOverride;
    float angleTolerance;
    float swivelSpeed;
    bool has_swivelCommand;
    AntennaMotorCommand swivelCommand;
} AntennaCommand;

typedef struct _AntennaData {
    float angle;
    float targetAngle;
    int32_t currentStep;
    int32_t targetStep;
} AntennaData;

typedef struct _BaseStationData {
    bool has_version;
    Version version;
    bool has_antenna;
    AntennaData antenna;
    bool has_orientation;
    Orientation orientation;
} BaseStationData;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _AntennaControlMode_MIN AntennaControlMode_ANTENNA_CONTROL_MODE_UNDEFINED
#define _AntennaControlMode_MAX AntennaControlMode_STOP_ANTENNA
#define _AntennaControlMode_ARRAYSIZE ((AntennaControlMode)(AntennaControlMode_STOP_ANTENNA+1))

#define AntennaCommand_mode_ENUMTYPE AntennaControlMode





/* Initializer values for message structs */
#define AntennaCommand_init_default              {false, Version_init_default, _AntennaControlMode_MIN, false, GpsCoordinates_init_default, false, GpsCoordinates_init_default, 0, 0, false, AntennaMotorCommand_init_default}
#define AntennaMotorCommand_init_default         {0, 0, 0, 0}
#define AntennaData_init_default                 {0, 0, 0, 0}
#define BaseStationData_init_default             {false, Version_init_default, false, AntennaData_init_default, false, Orientation_init_default}
#define AntennaCommand_init_zero                 {false, Version_init_zero, _AntennaControlMode_MIN, false, GpsCoordinates_init_zero, false, GpsCoordinates_init_zero, 0, 0, false, AntennaMotorCommand_init_zero}
#define AntennaMotorCommand_init_zero            {0, 0, 0, 0}
#define AntennaData_init_zero                    {0, 0, 0, 0}
#define BaseStationData_init_zero                {false, Version_init_zero, false, AntennaData_init_zero, false, Orientation_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define AntennaMotorCommand_moveSteps_tag        1
#define AntennaMotorCommand_moveRadians_tag      2
#define AntennaMotorCommand_targetAngle_tag      3
#define AntennaMotorCommand_zeroPosition_tag     4
#define AntennaCommand_version_tag               1
#define AntennaCommand_mode_tag                  2
#define AntennaCommand_baseStationCoordinates_tag 3
#define AntennaCommand_roverCoordinatesOverride_tag 4
#define AntennaCommand_angleTolerance_tag        5
#define AntennaCommand_swivelSpeed_tag           6
#define AntennaCommand_swivelCommand_tag         7
#define AntennaData_angle_tag                    1
#define AntennaData_targetAngle_tag              2
#define AntennaData_currentStep_tag              3
#define AntennaData_targetStep_tag               4
#define BaseStationData_version_tag              1
#define BaseStationData_antenna_tag              2
#define BaseStationData_orientation_tag          3

/* Struct field encoding specification for nanopb */
#define AntennaCommand_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  version,           1) \
X(a, STATIC,   SINGULAR, UENUM,    mode,              2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  baseStationCoordinates,   3) \
X(a, STATIC,   OPTIONAL, MESSAGE,  roverCoordinatesOverride,   4) \
X(a, STATIC,   SINGULAR, FLOAT,    angleTolerance,    5) \
X(a, STATIC,   SINGULAR, FLOAT,    swivelSpeed,       6) \
X(a, STATIC,   OPTIONAL, MESSAGE,  swivelCommand,     7)
#define AntennaCommand_CALLBACK NULL
#define AntennaCommand_DEFAULT NULL
#define AntennaCommand_version_MSGTYPE Version
#define AntennaCommand_baseStationCoordinates_MSGTYPE GpsCoordinates
#define AntennaCommand_roverCoordinatesOverride_MSGTYPE GpsCoordinates
#define AntennaCommand_swivelCommand_MSGTYPE AntennaMotorCommand

#define AntennaMotorCommand_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    moveSteps,         1) \
X(a, STATIC,   SINGULAR, FLOAT,    moveRadians,       2) \
X(a, STATIC,   SINGULAR, FLOAT,    targetAngle,       3) \
X(a, STATIC,   SINGULAR, BOOL,     zeroPosition,      4)
#define AntennaMotorCommand_CALLBACK NULL
#define AntennaMotorCommand_DEFAULT NULL

#define AntennaData_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    angle,             1) \
X(a, STATIC,   SINGULAR, FLOAT,    targetAngle,       2) \
X(a, STATIC,   SINGULAR, INT32,    currentStep,       3) \
X(a, STATIC,   SINGULAR, INT32,    targetStep,        4)
#define AntennaData_CALLBACK NULL
#define AntennaData_DEFAULT NULL

#define BaseStationData_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  version,           1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  antenna,           2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  orientation,       3)
#define BaseStationData_CALLBACK NULL
#define BaseStationData_DEFAULT NULL
#define BaseStationData_version_MSGTYPE Version
#define BaseStationData_antenna_MSGTYPE AntennaData
#define BaseStationData_orientation_MSGTYPE Orientation

extern const pb_msgdesc_t AntennaCommand_msg;
extern const pb_msgdesc_t AntennaMotorCommand_msg;
extern const pb_msgdesc_t AntennaData_msg;
extern const pb_msgdesc_t BaseStationData_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define AntennaCommand_fields &AntennaCommand_msg
#define AntennaMotorCommand_fields &AntennaMotorCommand_msg
#define AntennaData_fields &AntennaData_msg
#define BaseStationData_fields &BaseStationData_msg

/* Maximum encoded size of messages (where known) */
#define AntennaCommand_size                      95
#define AntennaData_size                         32
#define AntennaMotorCommand_size                 23
#define BaseStationData_size                     75
#define MARS_PB_H_MAX_SIZE                       AntennaCommand_size

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
